AWSTemplateFormatVersion: 2010-09-09

Description: Create a CodePipeline to include Nested CloudFormation, CodeBuild and Approval steps.

Parameters:

  TargetCFNStack:
    Type: String
    Description: Name of the cfn stack to deploy.

  ArtifactStoreS3Location:
    Type: String
    Description: Name of the S3 bucket to store CodePipeline artificat and cfn template files.

  EnvironmentStage:
    Type: String
    Description: The environment tag is used to designate the Environment Stage of the associated AWS resource.
    AllowedValues:
      - dev
      - prod
    Default: dev
    
  GitHubOwner:
    Type: String
    Description: The username or org that owns the repo

  GitHubRepo:
    Type: String
    Description: The name of the repo as it appears in Github. ex) https://github.com/[GitHubRepo]

  GitHubBranch:
    Type: String
    Description: The branch to pull
    Default: main

  GitHubTokenSecretName:
    Type: String
    Description: The name of the Secrets Manager secret that contains a GitHub personal access token
    Default: Github

  GitHubTokenSecretKeyName:
    Type: String
    Description: The JSON key name of the Secrets Manager value
    Default: PersonalAccessToken
    
    
Resources:
  CodePipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CloudFormationRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        -
          PolicyName: "CodeBuildNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Test-${AWS::StackName}*
              -
                Effect: "Allow"
                Action:
                  - "ec2:Describe*"
                  - "cloudformation:ValidateTemplate"
                  - "elasticloadbalancing:Describe*"
                  - "autoscaling:Describe*"
                  - "iam:Get*"
                  - "iam:List*"
                  - "logs:Describe*"
                  - "logs:Get*"
                  - "tag:Get*"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              -
                Effect: "Allow"
                Action:
                  - "s3:*"
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:s3:::codepipeline-${AWS::Region}-*
                  - Fn::Sub: arn:${AWS::Partition}:s3:::${ArtifactStoreS3Location}/*
                  - Fn::Sub: arn:${AWS::Partition}:s3:::${ArtifactStoreS3Location}
  BuildCopyCFNProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: BuildCopyCFN-${AWS::StackName}
      Description: Build to validate and copy CFN templates
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0 
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Value:
              Ref: ArtifactStoreS3Location
          - Name: TEMPLATE_PREFIX
            Value: codebuild
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      TimeoutInMinutes: 15
      EncryptionKey:
        Fn::Sub: arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
      Tags:
        - Key: Name
          Value:
            Fn::Sub: BuildCopyCFN-${AWS::StackName}

  DeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name:
        Fn::Sub: ContinuousDeliveryNestedCFN-${AWS::StackName}
      RoleArn:
          Fn::GetAtt: [ CodePipelineRole, Arn ]
      Stages:
        -
          Name: CFNSource
          Actions:
            - Name: CFNTemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: CFNTemplateOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Sub '{{resolve:secretsmanager:${GitHubTokenSecretName}:SecretString:${GitHubTokenSecretKeyName}}}'
              RunOrder: 1
        -
          Name: Validate
          Actions:
            -
              Name: CodeBuild
              InputArtifacts:
                - Name: CFNTemplateOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                -
                  Name: CFNTemplateArtifact
              Configuration:
                ProjectName:
                  Ref: BuildCopyCFNProject
              RunOrder: 1
        -
          Name: UAT
          Actions:
            -
              Name: CreateUATChangeSet
              InputArtifacts:
                -
                  Name: CFNTemplateArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                -
                  Name: CreatedUATChangeSet
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: UATCBChangeSet
                RoleArn:
                  Fn::GetAtt: [ CloudFormationRole, Arn ]
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                StackName: !Ref TargetCFNStack
                TemplateConfiguration: !Sub CFNTemplateArtifact::config-${EnvironmentStage}.json
                TemplatePath: CFNTemplateArtifact::packaged-root-template.yaml
              RunOrder: 1
            -
              Name: ExecuteUATChangeSet
              InputArtifacts:
                -
                  Name: CreatedUATChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              OutputArtifacts:
                -
                  Name: DeployedUAT
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: UATCBChangeSet
                StackName: !Ref TargetCFNStack
              RunOrder: 2

      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location